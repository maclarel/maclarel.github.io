<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Logan MacLaren</title><link>https://maclarel.github.io/</link><description>Recent content on Logan MacLaren</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sat, 13 Nov 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://maclarel.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Publish articles with GitHub Actions</title><link>https://maclarel.github.io/posts/2021-11/actions/</link><pubDate>Sat, 13 Nov 2021 00:00:00 +0000</pubDate><guid>https://maclarel.github.io/posts/2021-11/actions/</guid><description>This is a test - will flesh out as I get this working</description></item><item><title>I still use Arch, btw</title><link>https://maclarel.github.io/posts/2021-11/still_use_arch/</link><pubDate>Thu, 11 Nov 2021 00:00:00 +0000</pubDate><guid>https://maclarel.github.io/posts/2021-11/still_use_arch/</guid><description>Yep, the meme lives on. Still getting by with Arch as a daily driver. Still running it through VirtualBox.
What&amp;rsquo;s great? Full control, and amazingly lightweight. Booted, and with my WM (i3) running, I&amp;rsquo;m measuring &amp;lt; 300MB of RAM usage and virtually zero CPU/disk usage. Windows or Mac OS sitting idle&amp;hellip; yeah, not comparable. Itg&amp;rsquo;s very refreshing having full control over just about every aspect of what I want.
I&amp;rsquo;m getting so used to using i3, with only extremly minor modifications to bindings, that I&amp;rsquo;ve actually updated a lot of my Amethyst bindings to align with i3 defaults.</description></item><item><title>Relentless follow-through in Support</title><link>https://maclarel.github.io/posts/2021-11/expectations/</link><pubDate>Mon, 08 Nov 2021 00:00:00 +0000</pubDate><guid>https://maclarel.github.io/posts/2021-11/expectations/</guid><description>Way back in April 2020 I wrote an article called Written communication for support which covered some high level best practices around setting, managing, and resetting expectations. Think of this as a spiritual successor to that article, as we&amp;rsquo;re going to talk about the other side of the coin - relentless follow-through.
To put &amp;ldquo;relentless follow-through&amp;rdquo; in more direct terms, I want to discuss some best practices around timeliness of responses even when there&amp;rsquo;s no news, internal follow-up and expectation setting, and some options for collaboration (depending on the size/maturity of your business).</description></item><item><title>I use Arch, btw</title><link>https://maclarel.github.io/posts/2021-10/arch_btw/</link><pubDate>Sun, 03 Oct 2021 00:00:00 +0000</pubDate><guid>https://maclarel.github.io/posts/2021-10/arch_btw/</guid><description>I use Arch, btw I&amp;rsquo;ve been using Linux for ages, nearly two decades at this point. I actually dug out my old Mandrake and Slackware CDs while going through a box in my basement the other day&amp;hellip; quite the flashback.
Despite that tenure on at least some of the hardware I&amp;rsquo;ve owned at any given time, I&amp;rsquo;ve never really used it as a daily driver for desktop usage. That changed today when I finally sat down and set up Arch, complete with forgetting to install a boot loader, on my main rig.</description></item><item><title>Server Rebuild</title><link>https://maclarel.github.io/posts/2021-05/server_rebuild/</link><pubDate>Sun, 16 May 2021 00:00:00 +0000</pubDate><guid>https://maclarel.github.io/posts/2021-05/server_rebuild/</guid><description>What did I do? Half fueled by beer, and half by a playlist of keygen tracks, I decided that it would be a good idea to finally getting around to rebuilding my long-lived server&amp;hellip; No more Windows and its infuriating forced updates (which you used to be able to override), lack of clear/consistent OS level event scripting for integration with my UPS, or garbage-tier support from Docker. I wanted something that I&amp;rsquo;d finally have the level of control I wanted for something that backs pretty much eveverything I use outside of work.</description></item><item><title>Keyboard ascension</title><link>https://maclarel.github.io/posts/2021-05/keebs/</link><pubDate>Sat, 01 May 2021 00:00:00 +0000</pubDate><guid>https://maclarel.github.io/posts/2021-05/keebs/</guid><description>Keebs Mechanical keyboards, sometimes calld keebs, come up from time to time as a bit of a meme. &amp;ldquo;Oh, you&amp;rsquo;ve got one of those loud keyboards.&amp;rdquo; or &amp;ldquo;Why on earth did you spend $500 ona a keyboard that does the same thing as the $5 one I got from Office Depot?&amp;rdquo;.
I&amp;rsquo;ll say that, for the really cheap end of the spectrum with mechanical keyboards, this really is a meme that holds up.</description></item><item><title>Hello via GitHub Pages</title><link>https://maclarel.github.io/posts/2021-01/github-pages/</link><pubDate>Mon, 18 Jan 2021 00:00:00 +0000</pubDate><guid>https://maclarel.github.io/posts/2021-01/github-pages/</guid><description>Well this is new&amp;hellip; Rather than dealing with Blogger, a dubious mobile interface, and spreading things across many services&amp;hellip; why not just use GitHub Pages? I&amp;rsquo;m so used to writing markdown at this point that it just seems easier ðŸ˜„
Hugo Inspired by tmpdubz I figured I&amp;rsquo;d do a double-whammy here - play around with/learn GitHub Pages, while also giving my blog a much needed cosmetic overhaul/simplification/rebranding. This lead to Hugo, which is pretty darn neat.</description></item><item><title>Git &amp; GitHub Tutorial - Part 2 - Branching, forking, and pull requests</title><link>https://maclarel.github.io/posts/2020-08/github-tutorial-part-2/</link><pubDate>Sun, 02 Aug 2020 00:00:00 +0000</pubDate><guid>https://maclarel.github.io/posts/2020-08/github-tutorial-part-2/</guid><description>This is part 2 of a Git tutorial series - I recommend watching part 1 @ https://youtu.be/jhgoGnYgPuY first!
In this video we take a look at creating new branches in a Git repository, forking other repositories, and creating pull requests:</description></item><item><title>Git &amp; GitHub Tutorial - Part 1 - Creating &amp; using a Git repository</title><link>https://maclarel.github.io/posts/2020-07/github-tutorial-part-1/</link><pubDate>Sun, 26 Jul 2020 00:00:00 +0000</pubDate><guid>https://maclarel.github.io/posts/2020-07/github-tutorial-part-1/</guid><description>In this video we start to delve into using Git and GitHub to track a project. We will create a repository, clone it, make changes, and push those changes back up to GitHub so that everyone can view them!</description></item><item><title>Key-based Authentication for SSH</title><link>https://maclarel.github.io/posts/2020-07/key-based-auth-ssh/</link><pubDate>Sun, 19 Jul 2020 00:00:00 +0000</pubDate><guid>https://maclarel.github.io/posts/2020-07/key-based-auth-ssh/</guid><description>Tired of trying to remember passwords for every system you access, or annoyed that every system uses the same password? Let&amp;rsquo;s look at a more secure approach that can solve both problems - key based authentication with SSH!</description></item></channel></rss>