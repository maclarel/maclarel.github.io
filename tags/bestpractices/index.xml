<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>bestpractices on Logan MacLaren</title><link>https://maclarel.github.io/tags/bestpractices/</link><description>Recent content in bestpractices on Logan MacLaren</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Mon, 08 Nov 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://maclarel.github.io/tags/bestpractices/index.xml" rel="self" type="application/rss+xml"/><item><title>Relentless follow-through in Support</title><link>https://maclarel.github.io/posts/2021-11/expectations/</link><pubDate>Mon, 08 Nov 2021 00:00:00 +0000</pubDate><guid>https://maclarel.github.io/posts/2021-11/expectations/</guid><description>Way back in April 2020 I wrote an article called Written communication for support which covered some high level best practices around setting, managing, and resetting expectations. Think of this as a spiritual successor to that article, as we&amp;rsquo;re going to talk about the other side of the coin - relentless follow-through.
To put &amp;ldquo;relentless follow-through&amp;rdquo; in more direct terms, I want to discuss some best practices around timeliness of responses even when there&amp;rsquo;s no news, internal follow-up and expectation setting, and some options for collaboration (depending on the size/maturity of your business).</description></item><item><title>Written communication for Support</title><link>https://maclarel.github.io/posts/2020-04/written-communication-for-support/</link><pubDate>Sun, 12 Apr 2020 00:00:00 +0000</pubDate><guid>https://maclarel.github.io/posts/2020-04/written-communication-for-support/</guid><description>I&amp;rsquo;ve been working in customer facing roles for quite a while now. Granted, these have largely had the luxury of being in software companies, but I&amp;rsquo;ve also done a brief retail stint and I&amp;rsquo;d like to think the same skills apply in all cases.
While this will be by no means exhaustive, I want to go over two high-level concepts that I feel are extremely important, and can sometimes be overlooked even by veterans in customer facing positions.</description></item><item><title>Draining the (Big Data) Swamp</title><link>https://maclarel.github.io/posts/2018-07/draining-the-big-data-swamp/</link><pubDate>Tue, 24 Jul 2018 00:00:00 +0000</pubDate><guid>https://maclarel.github.io/posts/2018-07/draining-the-big-data-swamp/</guid><description>Before we dive too far into this article, let&amp;rsquo;s define a few key terms that will come up at several points:
Big Data - Technology relating to the storage, management, and utilization of &amp;ldquo;Big Data&amp;rdquo; (e.g. enormous amounts of data/petabyte scale). Data Lake - A common term to refer to a storage platform for Big Data. In this case, let&amp;rsquo;s assume Apache Hadoop (HDFS) or Amazon S3. Data Warehouse - A large store of data sourced from a variety of sources within a company, then used to guide management or business decisions.</description></item></channel></rss>